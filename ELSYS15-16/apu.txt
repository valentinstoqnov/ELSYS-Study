import java.util.*;
import java.io.*;
import java.math.*;

class Player {
    
    private static class Node {
        
        private int x;
        private int y;
        
        public Node(int x, int y) {
            this.x = x;
            this.y = y;
        }
        
        public void setX(int x) {
            this.x = x;   
        }
        
        public void setY(int y) {
            this.y = y;
        }
        
        public int getX() {
            return x;
        }
        
        public int getY() {
            return y;
        }
    }

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int width = in.nextInt();
        in.nextLine();
        int height = in.nextInt();
        in.nextLine();

        boolean[][] nodes = new boolean[height][width];
     		for(int r = 0; r < height; r++) {
     		
     			String line = in.nextLine();
     			
     			for(int c = 0; c < width; c++) {
     				if(line.charAt(c) == '0') {
     					nodes[r][c] = true;
     				}else{
     					nodes[r][c] = false;
     				}
     			}
     		}
     		
     		for(int i = 0; i < height; i++) {
 		  for(int j = 0; j < width; j++) {
 		    System.err.print(nodes[i][j] + " / ");   
 		  }
 		  System.err.println();
 		}

        for (int r = 0; r < height; r++) {
            for (int c = 0; c < width; c++) {
            	if(nodes[r][c]) {
            		Node currentNode = new Node(c, r);
            		Node xNeighbour = new Node(-1, -1);
            		Node yNeighbour = new Node(-1, -1);
            		
            		for(int x = c + 1; x < width && xNeighbour.getX() == -1; x++) {
            			if(nodes[r][x]) {
            				xNeighbour.setX(x);
            				xNeighbour.setY(r);
            			}
            		}
            		
            		for(int y = r + 1; y < height && yNeighbour.getX() == -1; y++) {
            			if(nodes[y][c]) {
            				yNeighbour.setX(c);
            				yNeighbour.setY(y);
            			}
            		}
            		
            		System.out.println(currentNode.getX() + " " + currentNode.getY()
                    + " " 
                    + xNeighbour.getX() + " " + xNeighbour.getY()
                    + " " 
                    + yNeighbour.getX() + " " + yNeighbour.getY());
            	}   
        		}
        }
    }
}
